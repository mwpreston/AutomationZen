name: Run Ansible Playbooks

on:
  push:
    branches:
      - master

jobs:
  run-playbooks:
    runs-on: self-hosted

    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    - name: Change to Ansible directory and clone Ansible Repo
      run: cd ansible-workflows && git clone https://github.com/rubrikinc/rubrik-modules-for-ansible.git
    - name: Stage Ansible files
      run: cd ansible-workflows/rubrik-modules-for-ansible/ && cp -R rubrikinc ../.. && cp ansible.cfg ../..
    - name: Run Ansible Playbook to clone VM
      run: ansible-playbook --verbose ansible-workflows/clone_template.yaml
      env:
        VMWARE_USER: ${{ secrets.VMWARE_USER }}
        VMWARE_PASSWORD: ${{ secrets.VMWARE_PASSWORD }}
        VMWARE_VCSA: ${{ secrets.VMWARE_VCSA }}
        VMWARE_DATACENTER: ${{ secrets.VMWARE_DATACENTER }}
        VMWARE_CLUSTER: ${{ secrets.VMWARE_CLUSTER }}
        VMWARE_FOLDER: ${{ secrets.VMWARE_FOLDER }}
        VMNAME: ${{ secrets.VMNAME }}
    - name: Run Ansible Playbook to refresh vCenter
      run: ansible-playbook -vvv ansible-workflows/refresh_vcenter.yaml
      env:
        rubrik_cdm_node_ip: ${{ secrets.RUBRIK_CDM_NODE_IP }}
        rubrik_cdm_username: ${{ secrets.RUBRIK_CDM_USERNAME }}
        rubrik_cdm_password: ${{ secrets.RUBRIK_CDM_PASSWORD }}
        VMWARE_VCSA: ${{ secrets.VMWARE_VCSA }}
        VMNAME: ${{ secrets.VMNAME }}
    - name: Run Ansible Playbook to protect VM
      run: ansible-playbook -vvv ansible-workflows/protect_vm.yaml
      env:
        rubrik_cdm_node_ip: ${{ secrets.RUBRIK_CDM_NODE_IP }}
        rubrik_cdm_username: ${{ secrets.RUBRIK_CDM_USERNAME }}
        rubrik_cdm_password: ${{ secrets.RUBRIK_CDM_PASSWORD }}
        RUBRIK_SLA_NAME: ${{ secrets.RUBRIK_SLA_NAME }}
        VMNAME: ${{ secrets.VMNAME }}
