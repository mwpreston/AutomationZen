---
- name: Refresh vCenter within Rubrik
  hosts: localhost
  gather_facts: no
  tasks:
  - name: Get VM Information from VMware
    vmware_guest_info:
      hostname: "{{ lookup('env', 'VMWARE_VCSA') }}"
      validate_certs: False
      name: "{{ lookup('env', 'VMNAME') }}"
      datacenter: "{{ lookup('env', 'VMWARE_DATACENTER') }}"
      username: "{{ lookup('env', 'VMWARE_USER') }}"
      password: "{{ lookup('env', 'VMWARE_PASSWORD') }}"
    register: vminfo

  - name: Get vCenter ID from Rubrik
    uri:
      url: "https://{{ lookup('env', 'rubrik_cdm_node_ip') }}/api/v1/vmware/vcenter"
      user: "{{ lookup('env', 'rubrik_cdm_username') }}"
      password: "{{ lookup('env', 'rubrik_cdm_password') }}"
      validate_certs: no
      method: GET
      force_basic_auth: yes
      status_code: 200
    register: vcenterinfo

  - name: Filter list of vCenters to desired one
    set_fact:
      vcenter_id: " {{ vcenterinfo.json.data | json_query(vcenter_id)|first|replace(' ','') }}"
    vars:
      vcenter_id: "[?name=='{{ lookup('env', 'VMWARE_VCSA') }}'].id"

  - name: Refresh individual VM in vCenter
    uri:
      url: "https://{{ lookup('env','rubrik_cdm_node_ip') }}/api/internal/vmware/vcenter/{{ vcenter_id |replace(' ','') }}/refresh_vm"
      user: "{{ lookup('env', 'rubrik_cdm_username') }}"
      password: "{{ lookup('env', 'rubrik_cdm_password') }}"
      validate_certs: no
      method: POST
      force_basic_auth: yes
      body_format: json
      status_code: 204
      body: "{{ '{ \"vmMoid\": \"' + vminfo.instance.moid + '\"}' }}"
